<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
	">
	
		<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
			<property name="realm" ref="ShiroRealm" />
		</bean>
		
		<!-- 項目自定义的Realm -->
	    <bean id="ShiroRealm" class="com.flc.interceptor.shiro.ShiroRealm" ></bean>
		
		<!-- Shiro Filter -->
		<!-- 这里需要配置一个bean,此bean的名字必须与web.xml的filter-name相同,spring代理时就是通过<filter-name>shiroFilter</filter-name>找到代理对象的,如果不配置就会抛出error,create bean shiroFilter Class not found 的异常,所以我们需要将shiro的过滤器注册到spring容器中给spring代理。这里注册的是org.apache.shiro.spring.web.ShiroFilterFactoryBean工厂类bean,shiro用的过滤器都是由这个工厂创建,其中有shiro自带的过滤器,也可以加入自定义的过滤器。我们使用shiro的登录校验时就用到了shiro的authc过滤器。该过滤器功能就是检查session中是否拥有shiro的授权,如果没有的话就要跳转到我们下方在property配置的unauthorizedUrl路径。 -->
		<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
			<property name="securityManager" ref="securityManager" />
			
			<property name="loginUrl" value="/" />
			
			<property name="successUrl" value="/main/index" />
			
			<property name="unauthorizedUrl" value="/login_toLogin" />
			
			<property name="filterChainDefinitions">
				<value>
				/static/login/** 			= anon
				/plugins/keypad/** 			= anon
				/static/js/myjs/** 			= authc
				/static/js/** 				= anon
				/uploadFiles/uploadImgs/** 	= anon
	           	/code.do 					= anon
	           	/login_login	 			= anon
	           	/app**/** 					= anon
	           	/weixin/** 					= anon
	           	/**							= authc
				</value>
			</property>
		</bean>
   
</beans>
